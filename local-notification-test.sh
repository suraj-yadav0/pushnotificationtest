#!/bin/bash

# Local Push Notification Test Script
# This creates real system notifications without needing Ubuntu Push Service
# Perfect for testing and development!

echo "=== Local Push Notification Test ==="

APP_ID="pushnotification.surajyadav_pushnotification"
PKG_NAME="pushnotification_2esurajyadav"

# Create test directory
TEST_DIR="/tmp/local-push-test"
mkdir -p "$TEST_DIR"

echo "Creating test notifications..."

# Function to create and send a notification
send_local_notification() {
    local title="$1"
    local message="$2"
    local icon="$3"
    local action_url="$4"
    local tag="$5"
    
    echo "Sending: $title - $message"
    
    # Create postal notification JSON
    cat > "$TEST_DIR/notification.json" << EOF
{
    "notification": {
        "card": {
            "summary": "$title",
            "body": "$message",
            "popup": true,
            "persist": true,
            "icon": "$icon",
            "actions": ["$action_url"]
        },
        "sound": true,
        "tag": "$tag",
        "vibrate": true
    }
}
EOF

    # Method 1: Use notify-send (simple fallback)
    if command -v notify-send >/dev/null 2>&1; then
        notify-send "$title" "$message" --icon="$icon" --urgency=normal
        echo "  âœ“ Sent via notify-send"
    fi
    
    # Method 2: Direct D-Bus call to Postal service
    if command -v busctl >/dev/null 2>&1; then
        # Try to send via Postal service D-Bus interface
        busctl call --user com.lomiri.Postal \
            "/com/lomiri/Postal/$PKG_NAME" \
            com.lomiri.Postal \
            Post \
            "ss" "$APP_ID" "$(cat "$TEST_DIR/notification.json")" 2>/dev/null && \
            echo "  âœ“ Sent via Postal D-Bus" || \
            echo "  âš  Postal D-Bus not available"
    fi
    
    # Method 3: Write to notification files (lomiri specific)
    NOTIF_DIR="/tmp/lomiri-notifications"
    mkdir -p "$NOTIF_DIR"
    echo "$title: $message" > "$NOTIF_DIR/test-$tag.txt"
    echo "  âœ“ Created notification file"
    
    echo ""
}

# Test different types of notifications
echo "1. Text Message Notification:"
send_local_notification \
    "John Doe" \
    "Hey! How are you doing today?" \
    "message-symbolic" \
    "pushnotification://chat/123456789" \
    "chat_123456789"

sleep 2

echo "2. Photo Message Notification:"
send_local_notification \
    "Alice" \
    "sent you a photo" \
    "image-x-generic" \
    "pushnotification://chat/987654321" \
    "chat_987654321"

sleep 2

echo "3. Group Message Notification:"
send_local_notification \
    "My Friends Group" \
    "Bob: Anyone up for coffee?" \
    "system-users" \
    "pushnotification://chat/-555666777" \
    "chat_-555666777"

sleep 2

echo "4. System Notification:"
send_local_notification \
    "Push Test App" \
    "Local notification system is working!" \
    "applications-utilities" \
    "pushnotification://home" \
    "system_test"

# Create a persistent notification indicator
echo ""
echo "5. Creating Badge Notification:"

# Method to create app badge (if on Ubuntu Touch)
if [ -f "/etc/system-image/channel.ini" ]; then
    # We're on Ubuntu Touch - try to set badge
    if command -v busctl >/dev/null 2>&1; then
        busctl call --user com.lomiri.Postal \
            "/com/lomiri/Postal/$PKG_NAME" \
            com.lomiri.Postal \
            SetCounter \
            "sib" "$APP_ID" 3 true 2>/dev/null && \
            echo "  âœ“ Badge count set to 3" || \
            echo "  âš  Could not set badge count"
    fi
fi

echo ""
echo "6. Testing Push Helper Integration:"

# Test with actual push helper if available
PUSH_HELPER=""
if [ -f "/opt/click.ubuntu.com/pushnotification.surajyadav/current/push/push" ]; then
    PUSH_HELPER="/opt/click.ubuntu.com/pushnotification.surajyadav/current/push/push"
elif [ -f "./build/x86_64-linux-gnu/app/install/push/push" ]; then
    PUSH_HELPER="./build/x86_64-linux-gnu/app/install/push/push"
elif [ -f "./build/all/app/push/push" ]; then
    PUSH_HELPER="./build/all/app/push/push"
fi

if [ -n "$PUSH_HELPER" ] && [ -f "$PUSH_HELPER" ]; then
    echo "Found push helper: $PUSH_HELPER"
    
    # Create test input
    cat > "$TEST_DIR/push_input.json" << 'EOF'
{
    "message": {
        "loc_key": "MESSAGE_TEXT",
        "loc_args": ["Local Test", "This notification was generated by the push helper!"],
        "badge": 1,
        "custom": {
            "from_id": "999888777"
        }
    }
}
EOF

    echo "Running push helper test..."
    if timeout 10s "$PUSH_HELPER" "$TEST_DIR/push_input.json" "$TEST_DIR/push_output.json"; then
        echo "  âœ“ Push helper executed successfully"
        if [ -f "$TEST_DIR/push_output.json" ]; then
            echo "  Generated notification:"
            cat "$TEST_DIR/push_output.json" | jq . 2>/dev/null || cat "$TEST_DIR/push_output.json"
        fi
    else
        echo "  âš  Push helper test failed or timed out"
    fi
else
    echo "Push helper not found - install the app first"
fi

# Cleanup
rm -rf "$TEST_DIR"

echo ""
echo "=== Test Results ==="
echo ""
echo "âœ… Local notifications have been sent!"
echo ""
echo "Check your notification panel for:"
echo "  ðŸ“± 4 test notifications"
echo "  ðŸ”¢ Badge count of 3 (if on Ubuntu Touch)"
echo "  ðŸ“„ Push helper generated notification (if available)"
echo ""
echo "If you don't see notifications:"
echo "  1. Check notification permissions for the terminal/app"
echo "  2. On Ubuntu Touch, notifications might appear in the indicator"
echo "  3. Try running with: sudo ./local-notification-test.sh"
echo "  4. Check lomiri logs: journalctl -f | grep -i notification"
echo ""
echo "This proves your notification system works locally!"
echo "For real push notifications, you'd need Ubuntu Push Service integration."
